ui {
  notification{
    maximum-count = 10
    lifetime = 5s
    width = 370
    dateformat = "yyyy-MM-dd HH:mm:ss.ffffff"   
    message-length=150
    message-format = "{monitor_name}{Trigger}{repos}"
    authority-level= 3
  }
  server{
    url = "http://192.168.70.23:7780"
  }
}

kafka {
  topics = ["alertbeat"]
  bootstrap-servers = ["192.168.70.23:7710"]
}

akka.kafka.producer {
  parallelism = 100
  flush-timeout = 10s
  use-dispatcher = "akka.kafka.default-dispatcher"
}

akka.kafka.consumer {
  poll-interval = 50ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  commit-time-warning = 1s
  commit-refresh-interval = infinite
  buffer-size = 128
  use-dispatcher = "akka.kafka.default-dispatcher"
  wait-close-partition = 500ms
  position-timeout = 5s
  offset-for-times-timeout = 5s
  metadata-request-timeout = 5s
  eos-draining-check-interval = 30ms
  partition-handler-warning = 5s
}

akka.kafka.default-dispatcher {
  type = "Dispatcher"
  executor = "default-executor"
}

akka.kafka.committer {
    max-batch = 1000
    max-interval = 10s
    parallelism = 1
}

akka {
    loglevel = DEBUG
    loggers = ["Akka.Logger.NLog.NLogLogger, Akka.Logger.NLog"]
    log-config-on-start = on
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      fsm = on
      event-stream = on
      unhandled = on
      router-misconfiguration = on
    }
}
